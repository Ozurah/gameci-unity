name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  test:
    name: Test my project ðŸ§ª
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests ðŸ§«
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: 'GameCI-Unity'
          coverageOptions: 'useProjectSettings'
        
      # Output
      - name: Coverage result ðŸ”®
        uses: actions/upload-artifact@v4
        with:
          name: Coverage
          path: CodeCoverage

      - name: Tests result ðŸª„
        uses: actions/upload-artifact@v4
        with:
          name: Tests result
          path: artifacts

  build:
    if: vars.ENABLE_BUILD == 'true'
    name: Build ${{ matrix.targetPlatform }} ðŸ’»
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: ${{ fromJson(vars.TARGET_PLATFORMS_JSON) }}

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      # Build
      - name: Build project âœ¨
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: 'GameCI-Unity'
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
