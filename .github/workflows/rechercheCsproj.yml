name: Recherche CSProjet

on: [push, pull_request]

jobs:
  test:
    name: Test my project ðŸ§ª
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests ðŸ§«
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: 'GameCI-Unity'


      - name: Generate solution-project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: 'GameCI-Unity'
          customParameters: -executeMethod GitTools.Solution.Sync

      - name: Dir list
        run: ls
      - name: Dir list Unity proj
        run: ls 'GameCI-Unity/'
      - name: csproj list
        run: find . -name '*.csproj'
      - name: cat script csproj
        run: cat 'GameCI-Unity/Scripts.csproj'
